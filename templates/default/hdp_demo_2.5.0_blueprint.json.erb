{
  "configurations" : [
    {
      "ams-env" : {
        "properties_attributes" : { },
        "properties" : {
          "ambari_metrics_user" : "<%= node['hw']['ambari']['metrics']['user']['name'] %>"
        }
      }
    },
    {
      "ams-grafana-env" : {
        "properties_attributes" : { },
        "properties" : {
          "metrics_grafana_data_dir" : "<%= node['hw']['ambari']['metrics']['config']['ams-grafana-env']['metrics_grafana_data_dir'] %>"
        }
      }
    },
    {
      "ams-grafana-ini" : {
        "properties_attributes" : { },
        "properties" : {
          "cert_file" : "<%= node['hw']['ambari']['metrics']['config']['ams-grafana-ini']['cert_file'] %>",
          "cert_key" : "<%= node['hw']['ambari']['metrics']['config']['ams-grafana-ini']['cert_key'] %>",
          "port" : "<%= node['hw']['ambari']['metrics']['config']['ams-grafana-ini']['port'] %>",
          "protocol" : "<%= node['hw']['ambari']['metrics']['config']['ams-grafana-ini']['protocol']%>"
        }
      }
    },
    {
      "ams-hbase-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hbase.rootdir" : "<%= node['hw']['ambari']['metrics']['config']['ams-hbase-site']['hbase.rootdir'] %>",
          "hbase.tmp.dir" : "<%= node['hw']['ambari']['metrics']['config']['ams-hbase-site']['hbase.tmp.dir'] %>"
        }
      }
    },
    {
      "ams-site" : {
        "properties_attributes" : { },
        "properties" : {
          "timeline.metrics.aggregator.checkpoint.dir" : "<%= node['hw']['ambari']['metrics']['config']['ams-site']['timeline.metrics.aggregator.checkpoint.dir'] %>",
          "timeline.metrics.service.webapp.address" : "%HOSTGROUP::host_group_demo%:6188"
        }
      }
    },
    {
      "core-site" : {
        "properties_attributes" : {
          "final" : {
            "fs.defaultFS" : "true"
          }
        },
        "properties" : {
          "fs.defaultFS" : "hdfs://%HOSTGROUP::host_group_demo%:8020",
          "hadoop.proxyuser.ambari.hosts" : "*",
          "hadoop.proxyuser.hcat.hosts" : "%HOSTGROUP::host_group_demo%",
          "hadoop.proxyuser.hdfs.hosts" : "*",
          "hadoop.proxyuser.hive.hosts" : "%HOSTGROUP::host_group_demo%",
          "hadoop.proxyuser.livy.hosts" : "*",
          "hadoop.proxyuser.oozie.hosts" : "%HOSTGROUP::host_group_demo%",
          "hadoop.proxyuser.yarn.hosts" : "%HOSTGROUP::host_group_demo%"
        }
      }
    },
    {
      "hadoop-env" : {
        "properties_attributes" : { },
        "properties" : {
          "namenode_heapsize" : "1536m"
        }
      }
    },
    {
      "hdfs-site" : {
        "properties_attributes" : {
          "final" : {
            "dfs.datanode.data.dir" : "true",
            "dfs.datanode.failed.volumes.tolerated" : "true",
            "dfs.namenode.http-address" : "true",
            "dfs.namenode.name.dir" : "true",
            "dfs.support.append" : "true",
            "dfs.webhdfs.enabled" : "true"
          }
        },
        "properties" : {
          "dfs.datanode.data.dir.perm" : "750",
          "dfs.datanode.data.dir" : "<%= node['hw']['hadoop']['hdfs']['config']['hdfs-site']['dfs.datanode.data.dir'] %>",
          "dfs.datanode.failed.volumes.tolerated" : "<%= node['hw']['hadoop']['hdfs']['config']['hdfs-site']['dfs.datanode.failed.volumes.tolerated'] %>",
          "dfs.namenode.acls.enabled" : "<%= node['hw']['hadoop']['hdfs']['config']['hdfs-site']['dfs.namenode.acls.enabled'] %>",
          "dfs.namenode.http-address" : "%HOSTGROUP::host_group_demo%:50070",
          "dfs.namenode.https-address" : "%HOSTGROUP::host_group_demo%:50470",
          "dfs.namenode.name.dir" : "<%= node['hw']['hadoop']['hdfs']['config']['hdfs-site']['dfs.namenode.name.dir'] %>",
          "dfs.namenode.rpc-address" : "%HOSTGROUP::host_group_demo%:8020",
          "dfs.namenode.safemode.threshold-pct" : "1",
          "dfs.namenode.secondary.http-address" : "%HOSTGROUP::host_group_demo%:50090",
          "fs.permissions.umask-mode" : "022"
        }
      }
    },
    {
      "hive-env" : {
        "properties_attributes" : { },
        "properties" : {
          "hive_ambari_database" : "MySQL",
          "hive_database_name" : "hive",
          "hive_database_type" : "mysql",
          "hive_database" : "New MySQL Database",
          "hive_user" : "hive"
        }
      }
    },
    {
      "hive-interactive-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.llap.zk.sm.connectionString" : "%HOSTGROUP::host_group_demo%:2181",
          "hive.server2.zookeeper.namespace" : "hiveserver2-hive2"
        }
      }
    },
    {
      "hive-site" : {
        "properties_attributes" : {
          "hidden" : {
            "javax.jdo.option.ConnectionPassword" : "HIVE_CLIENT,WEBHCAT_SERVER,HCAT,CONFIG_DOWNLOAD"
          }
        },
        "properties" : {
          "ambari.hive.db.schema.name" : "hive",
          "hive.cluster.delegation.token.store.zookeeper.connectString" : "%HOSTGROUP::host_group_demo%:2181",
          "hive.cluster.delegation.token.store.zookeeper.znode" : "/hive/cluster/delegation",
          "hive.metastore.uris" : "thrift://%HOSTGROUP::host_group_demo%:9083",
          "hive.zookeeper.client.port" : "2181",
          "hive.zookeeper.namespace" : "hive_zookeeper_namespace",
          "hive.zookeeper.quorum" : "%HOSTGROUP::host_group_demo%:2181",
          "javax.jdo.option.ConnectionDriverName" : "com.mysql.jdbc.Driver",
          "javax.jdo.option.ConnectionURL" : "jdbc:mysql://%HOSTGROUP::host_group_demo%/hive?createDatabaseIfNotExist=true",
          "javax.jdo.option.ConnectionUserName" : "hive"
        }
      }
    },
    {
      "infra-solr-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "#!/bin/bash\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements. See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# By default the script will use JAVA_HOME to determine which java\n# to use, but you can set a specific path for Solr to use without\n# affecting other Java applications on your server/workstation.\nSOLR_JAVA_HOME={{java64_home}}\n\n# Increase Java Min/Max Heap as needed to support your indexing / query needs\nSOLR_JAVA_MEM=\"-Xms{{infra_solr_min_mem}}m -Xmx{{infra_solr_max_mem}}m\"\n\n# Enable verbose GC logging\nGC_LOG_OPTS=\"-verbose:gc -XX:+PrintHeapAtGC -XX:+PrintGCDetails \\\n-XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime\"\n\n# These GC settings have shown to work well for a number of common Solr workloads\nGC_TUNE=\"-XX:NewRatio=3 \\\n-XX:SurvivorRatio=4 \\\n-XX:TargetSurvivorRatio=90 \\\n-XX:MaxTenuringThreshold=8 \\\n-XX:+UseConcMarkSweepGC \\\n-XX:+UseParNewGC \\\n-XX:ConcGCThreads=4 -XX:ParallelGCThreads=4 \\\n-XX:+CMSScavengeBeforeRemark \\\n-XX:PretenureSizeThreshold=64m \\\n-XX:+UseCMSInitiatingOccupancyOnly \\\n-XX:CMSInitiatingOccupancyFraction=50 \\\n-XX:CMSMaxAbortablePrecleanTime=6000 \\\n-XX:+CMSParallelRemarkEnabled \\\n-XX:+ParallelRefProcEnabled\"\n\n# Set the ZooKeeper connection string if using an external ZooKeeper ensemble\n# e.g. host1:2181,host2:2181/chroot\n# Leave empty if not using SolrCloud\nZK_HOST=\"{{zookeeper_quorum}}{{infra_solr_znode}}\"\n\n# Set the ZooKeeper client timeout (for SolrCloud mode)\nZK_CLIENT_TIMEOUT=\"60000\"\n\n# By default the start script uses \"localhost\"; override the hostname here\n# for production SolrCloud environments to control the hostname exposed to cluster state\nSOLR_HOST=\"ambari-server\"\n\n# By default the start script uses UTC; override the timezone if needed\n#SOLR_TIMEZONE=\"UTC\"\n\n# Set to true to activate the JMX RMI connector to allow remote JMX client applications\n# to monitor the JVM hosting Solr; set to \"false\" to disable that behavior\n# (false is recommended in production environments)\nENABLE_REMOTE_JMX_OPTS=\"true\"\n\n# The script will use SOLR_PORT+10000 for the RMI_PORT or you can set it here\nRMI_PORT={{infra_solr_jmx_port}}\n\n# Anything you add to the SOLR_OPTS variable will be included in the java\n# start command line as-is, in ADDITION to other options. If you specify the\n# -a option on start script, those options will be appended as well. Examples:\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=3000\"\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoCommit.maxTime=60000\"\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.clustering.enabled=true\"\n\n# Location where the bin/solr script will save PID files for running instances\n# If not set, the script will create PID files in $SOLR_TIP/bin\nSOLR_PID_DIR={{infra_solr_piddir}}\n\n# Path to a directory where Solr creates index files, the specified directory\n# must contain a solr.xml; by default, Solr will use server/solr\nSOLR_HOME={{infra_solr_datadir}}\n\n# Solr provides a default Log4J configuration properties file in server/resources\n# however, you may want to customize the log settings and file appender location\n# so you can point the script to use a different log4j.properties file\nLOG4J_PROPS={{infra_solr_conf}}/log4j.properties\n\n# Location where Solr should write logs to; should agree with the file appender\n# settings in server/resources/log4j.properties\nSOLR_LOGS_DIR={{infra_solr_log_dir}}\n\n# Sets the port Solr binds to, default is 8983\nSOLR_PORT={{infra_solr_port}}\n\n# Be sure to update the paths to the correct keystore for your environment\n{% if infra_solr_ssl_enabled %}\nSOLR_SSL_KEY_STORE={{infra_solr_keystore_location}}\nSOLR_SSL_KEY_STORE_PASSWORD={{infra_solr_keystore_password}}\nSOLR_SSL_TRUST_STORE={{infra_solr_keystore_location}}\nSOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_keystore_password}}\nSOLR_SSL_NEED_CLIENT_AUTH=false\nSOLR_SSL_WANT_CLIENT_AUTH=false\n{% endif %}\n\n# Uncomment to set a specific SSL port (-Djetty.ssl.port=N); if not set\n# and you are using SSL, then the start script will use SOLR_PORT for the SSL port\n#SOLR_SSL_PORT=\n\n{% if security_enabled -%}\nSOLR_HOST=`hostname -f`\nSOLR_JAAS_FILE={{infra_solr_jaas_file}}\nSOLR_KERB_KEYTAB={{infra_solr_web_kerberos_keytab}}\nSOLR_KERB_PRINCIPAL={{infra_solr_web_kerberos_principal}}\nSOLR_KERB_NAME_RULES={{infra_solr_kerberos_name_rules}}\n\nSOLR_AUTHENTICATION_CLIENT_CONFIGURER=\"org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer\"\nSOLR_AUTHENTICATION_OPTS=\" -DauthenticationPlugin=org.apache.solr.security.KerberosPlugin -Djava.security.auth.login.config=$SOLR_JAAS_FILE -Dsolr.kerberos.principal=${SOLR_KERB_PRINCIPAL} -Dsolr.kerberos.keytab=${SOLR_KERB_KEYTAB} -Dsolr.kerberos.cookie.domain=${SOLR_HOST} -Dsolr.kerberos.name.rules=${SOLR_KERB_NAME_RULES}\"\n{% endif %}",
          "infra_solr_keystore_location" : "<%= node['hw']['ambari']['infra']['config']['infra-solr-env']['infra_solr_keystore_location'] %>",
          "infra_solr_keystore_type" : "<%= node['hw']['ambari']['infra']['config']['infra-solr-env']['infra_solr_keystore_type'] %>",
          "infra_solr_port" : "<%= node['hw']['ambari']['infra']['config']['infra-solr-env']['infra_solr_port'] %>",
          "infra_solr_ssl_enabled" : "<%= node['hw']['ambari']['infra']['config']['infra-solr-env']['infra_solr_ssl_enabled'] %>",
          "infra_solr_truststore_location" : "<%= node['hw']['ambari']['infra']['config']['infra-solr-env']['infra_solr_truststore_location'] %>",
          "infra_solr_truststore_type" : "<%= node['hw']['ambari']['infra']['config']['infra-solr-env']['infra_solr_truststore_type'] %>",
          "infra_solr_user" : "<%= node['hw']['ambari']['infra']['user']['name'] %>"
        }
      }
    },
    {
      "kafka-broker" : {
        "properties_attributes" : { },
        "properties" : {
          "auto.create.topics.enable" : "<%= node['hw']['kafka']['config']['kafka-broker']['auto.create.topics.enable'] %>",
          "default.replication.factor" : "<%= node['hw']['kafka']['config']['kafka-broker']['default.replication.factor'] %>",
          "delete.topic.enable" : "<%= node['hw']['kafka']['config']['kafka-broker']['delete.topic.enable'] %>",
          "listeners" : "PLAINTEXT://localhost:6667",
          "log.dirs" : "<%= node['hw']['kafka']['config']['kafka-broker']['log.dirs'] %>",
          "log.retention.hours": "<%= node['hw']['kafka']['config']['kafka-broker']['log.retention.hours'] %>",
          "num.partitions" : "<%= node['hw']['kafka']['config']['kafka-broker']['num.partitions'] %>",
          "port" : "6667",
          "zookeeper.connect" : "%HOSTGROUP::host_group_demo%:2181"
        }
      }
    },
    {
      "logfeeder-env" : {
        "properties_attributes" : { },
        "properties" : {
          "logfeeder_keystore_location" : "<%= node['hw']['logsearch']['config']['logfeeder-env']['logfeeder_keystore_location'] %>",
          "logfeeder_keystore_type" : "<%= node['hw']['logsearch']['config']['logfeeder-env']['logfeeder_keystore_type'] %>",
          "logfeeder_truststore_location" : "<%= node['hw']['logsearch']['config']['logfeeder-env']['logfeeder_truststore_location'] %>",
          "logfeeder_truststore_type" : "<%= node['hw']['logsearch']['config']['logfeeder-env']['logfeeder_keystore_location'] %>"
        }
      }
    },
    {
      "logsearch-env" : {
        "properties_attributes" : { },
        "properties" : {
          "logsearch_keystore_location" : "<%= node['hw']['logsearch']['config']['logsearch-env']['logsearch_keystore_location'] %>",
          "logsearch_keystore_type" : "<%= node['hw']['logsearch']['config']['logsearch-env']['logsearch_keystore_type'] %>",
          "logsearch_truststore_location" : "<%= node['hw']['logsearch']['config']['logsearch-env']['logsearch_truststore_location'] %>",
          "logsearch_truststore_type" : "<%= node['hw']['logsearch']['config']['logsearch-env']['logsearch_truststore_type'] %>",
          "logsearch_ui_port" : "<%= node['hw']['logsearch']['config']['logsearch-env']['logsearch_ui_port'] %>",
          "logsearch_ui_protocol" : "<%= node['hw']['logsearch']['config']['logsearch-env']['logsearch_ui_protocol'] %>",
          "logsearch_user" : "<%= node['hw']['logsearch']['user']['name'] %>"
        }
      }
    },
    {
      "mapred-site" : {
        "properties_attributes" : { },
        "properties" : {
          "mapreduce.application.classpath" : "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/current/hadoop/lib/hadoop-lzo-0.6.0.2.5.0.0-1245.jar:/etc/hadoop/conf/secure",
          "mapreduce.jobhistory.address" : "%HOSTGROUP::host_group_demo%:10020",
          "mapreduce.jobhistory.webapp.address" : "%HOSTGROUP::host_group_demo%:19888"
        }
      }
    },
    {
      "oozie-env" : {
        "properties_attributes" : { },
        "properties" : {
          "oozie_database" : "New Derby Database"
        }
      }
    },
    {
      "oozie-site" : {
        "properties_attributes" : { },
        "properties" : {
          "oozie.base.url" : "http://%HOSTGROUP::host_group_demo%:11000/oozie",
          "oozie.db.schema.name" : "oozie",
          "oozie.service.JPAService.jdbc.driver" : "org.apache.derby.jdbc.EmbeddedDriver",
          "oozie.service.JPAService.jdbc.username" : "oozie"
        }
      }
    },
    {
      "storm-site" : {
        "properties_attributes" : { },
        "properties" : {
          "nimbus.seeds" : "['%HOSTGROUP::host_group_demo%']",
          "storm.local.dir" : "/hadoop/storm",
          "storm.zookeeper.port" : "2181",
          "storm.zookeeper.root" : "/storm",
          "storm.zookeeper.servers" : "['%HOSTGROUP::host_group_demo%']",
          "supervisor.slots.ports" : "[6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707]"
        }
      }
    },
    {
      "webhcat-site" : {
        "properties_attributes" : { },
        "properties" : {
          "templeton.hive.properties" : "hive.metastore.local=false,hive.metastore.uris=thrift://%HOSTGROUP::host_group_demo%:9083,hive.metastore.sasl.enabled=false,hive.metastore.execute.setugi=true",
          "templeton.zookeeper.hosts" : "%HOSTGROUP::host_group_demo%:2181",
          "webhcat.proxyuser.ambari.hosts" : "%HOSTGROUP::host_group_demo%"
        }
      }
    },
    {
      "yarn-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hadoop.registry.zk.quorum" : "%HOSTGROUP::host_group_demo%:2181",
          "yarn.log.server.url" : "http://%HOSTGROUP::host_group_demo%:19888/jobhistory/logs",
          "yarn.nodemanager.local-dirs" : "<%= node['hw']['hadoop']['yarn']['config']['yarn-site']['yarn.nodemanager.local-dirs'] %>",
          "yarn.nodemanager.log-dirs" : "<%= node['hw']['hadoop']['yarn']['config']['yarn-site']['yarn.nodemanager.log-dirs'] %>",
          "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds" : "-1",
          "yarn.resourcemanager.address" : "%HOSTGROUP::host_group_demo%:8050",
          "yarn.resourcemanager.admin.address" : "%HOSTGROUP::host_group_demo%:8141",
          "yarn.resourcemanager.ha.enabled" : "false",
          "yarn.resourcemanager.hostname" : "%HOSTGROUP::host_group_demo%",
          "yarn.resourcemanager.resource-tracker.address" : "%HOSTGROUP::host_group_demo%:8025",
          "yarn.resourcemanager.scheduler.address" : "%HOSTGROUP::host_group_demo%:8030",
          "yarn.resourcemanager.webapp.address" : "%HOSTGROUP::host_group_demo%:8088",
          "yarn.resourcemanager.webapp.https.address" : "%HOSTGROUP::host_group_demo%:8090",
          "yarn.resourcemanager.zk-address" : "%HOSTGROUP::host_group_demo%:2181",
          "yarn.resourcemanager.zk-state-store.parent-path" : "/rmstore",
          "yarn.timeline-service.address" : "%HOSTGROUP::host_group_demo%:10200",
          "yarn.timeline-service.http-authentication.proxyuser.ambari.hosts" : "%HOSTGROUP::host_group_demo%",
          "yarn.timeline-service.leveldb-state-store.path" : "<%= node['hw']['hadoop']['yarn']['config']['yarn-site']['yarn.timeline-service.leveldb-state-store.path'] %>",
          "yarn.timeline-service.leveldb-timeline-store.path" : "<%= node['hw']['hadoop']['yarn']['config']['yarn-site']['yarn.timeline-service.leveldb-timeline-store.path'] %>",
          "yarn.timeline-service.webapp.address" : "%HOSTGROUP::host_group_demo%:8188",
          "yarn.timeline-service.webapp.https.address" : "%HOSTGROUP::host_group_demo%:8190"
        }
      }
    },
    {
      "zoo.cfg" : {
        "properties_attributes" : { },
        "properties" : {
          "clientPort" : "2181",
          "dataDir" : "/hadoop/zookeeper"
        }
      }
    }
  ],
  "host_groups" : [
    {
      "components" : [
        {
          "name" : "AMBARI_SERVER"
        },
        {
          "name" : "APP_TIMELINE_SERVER"
        },
        {
          "name" : "DATANODE"
        },
        {
          "name" : "DRPC_SERVER"
        },
        {
          "name" : "HCAT"
        },
        {
          "name" : "HDFS_CLIENT"
        },
        {
          "name" : "HISTORYSERVER"
        },
        {
          "name" : "HIVE_CLIENT"
        },
        {
          "name" : "HIVE_METASTORE"
        },
        {
          "name" : "HIVE_SERVER"
        },
        {
          "name" : "INFRA_SOLR"
        },
        {
          "name" : "INFRA_SOLR_CLIENT"
        },
        {
          "name" : "KAFKA_BROKER"
        },
        {
          "name" : "LOGSEARCH_LOGFEEDER"
        },
        {
          "name" : "LOGSEARCH_SERVER"
        },
        {
          "name" : "MAPREDUCE2_CLIENT"
        },
        {
          "name" : "METRICS_COLLECTOR"
        },
        {
          "name" : "METRICS_GRAFANA"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "MYSQL_SERVER"
        },
        {
          "name" : "NAMENODE"
        },
        {
          "name" : "NIMBUS"
        },
        {
          "name" : "NODEMANAGER"
        },
        {
          "name" : "OOZIE_CLIENT"
        },
        {
          "name" : "OOZIE_SERVER"
        },
        {
          "name" : "PIG"
        },
        {
          "name" : "RESOURCEMANAGER"
        },
        {
          "name" : "SECONDARY_NAMENODE"
        },
        {
          "name" : "SLIDER"
        },
        {
          "name" : "SPARK_CLIENT"
        },
        {
          "name" : "SPARK_JOBHISTORYSERVER"
        },
        {
          "name" : "SQOOP"
        },
        {
          "name" : "STORM_UI_SERVER"
        },
        {
          "name" : "SUPERVISOR"
        },
        {
          "name" : "TEZ_CLIENT"
        },
        {
          "name" : "WEBHCAT_SERVER"
        },
        {
          "name" : "YARN_CLIENT"
        },
        {
          "name" : "ZOOKEEPER_CLIENT"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        }
      ],
      "configurations" : [ ],
      "name" : "host_group_demo",
      "cardinality" : "1"
    }
  ],
  "Blueprints" : {
    "blueprint_name" : "hdp_demo_2.5.0_blueprint",
    "stack_name" : "HDP",
    "stack_version" : "2.5"
  }
}
